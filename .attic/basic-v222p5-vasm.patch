*** basic.asm.dist	Tue Apr 25 03:26:57 2023
--- basic.asm	Tue Apr 25 02:53:45 2023
***************
*** 475,481 ****
  
  ; This start can be changed to suit your system
  
!       *=    $C000
  
  ; BASIC cold start entry point
  
--- 475,481 ----
  
  ; This start can be changed to suit your system
  
!       .org  $C000
  
  ; BASIC cold start entry point
  
***************
*** 1548,1554 ****
                               
  ; *** begin patch  2.22p5.3   potential return address -$100 (page not incremented) ***
  ; *** add
!    .IF [* & $FF] == $FD
        NOP                     ; return address of JSR +1 (on  next page)
     .ENDIF  
  ; *** end   patch  2.22p5.3   potential return address -$100 (page not incremented) ***
--- 1548,1554 ----
                               
  ; *** begin patch  2.22p5.3   potential return address -$100 (page not incremented) ***
  ; *** add
!    .IF (* & $FF) == $FD
        NOP                     ; return address of JSR +1 (on  next page)
     .ENDIF  
  ; *** end   patch  2.22p5.3   potential return address -$100 (page not incremented) ***
***************
*** 1627,1633 ****
        JMP   LAB_LET           ; else go do implied LET
  
  LAB_1609
!       CMP   #[TK_TAB-$80]*2   ; compare normalised token * 2 with TAB
        BCS   LAB_15D9          ; branch if A>=TAB (do syntax error then warm start)
                                ; only tokens before TAB can start a line
        TAY                     ; copy to index
--- 1627,1633 ----
        JMP   LAB_LET           ; else go do implied LET
  
  LAB_1609
!       CMP   #(TK_TAB-$80)*2   ; compare normalised token * 2 with TAB
        BCS   LAB_15D9          ; branch if A>=TAB (do syntax error then warm start)
                                ; only tokens before TAB can start a line
        TAY                     ; copy to index
***************
*** 3102,3108 ****
                                ; now push sign, round FAC1 and put on stack
  ; *** begin patch  2.22p5.3   potential return address -$100 (page not incremented) ***
  ; *** add
!    .IF [* & $FF] == $FD
        NOP                     ; return address of JSR +1 (on  next page)
     .ENDIF  
  ; *** end   patch  2.22p5.3   potential return address -$100 (page not incremented) ***
--- 3102,3108 ----
                                ; now push sign, round FAC1 and put on stack
  ; *** begin patch  2.22p5.3   potential return address -$100 (page not incremented) ***
  ; *** add
!    .IF (* & $FF) == $FD
        NOP                     ; return address of JSR +1 (on  next page)
     .ENDIF  
  ; *** end   patch  2.22p5.3   potential return address -$100 (page not incremented) ***
***************
*** 3339,3347 ****
  ; *** with
        TAX                     ; save to trap concatenate
        PLA                     ; dump return address high byte
!       CPX   #<[LAB_224Da+2]   ; from concatenate low return address?
        BNE   LAB_1C13b         ; No - continue!
!       CMP   #>[LAB_224Da+2]   ; from concatenate high return address?
        BEQ   LAB_1C13a         ; Yes - error!
  LAB_1C13b
        JMP   LAB_1B1D          ; execute function then continue evaluation
--- 3339,3347 ----
  ; *** with
        TAX                     ; save to trap concatenate
        PLA                     ; dump return address high byte
!       CPX   #<(LAB_224Da+2)   ; from concatenate low return address?
        BNE   LAB_1C13b         ; No - continue!
!       CMP   #>(LAB_224Da+2)   ; from concatenate high return address?
        BEQ   LAB_1C13a         ; Yes - error!
  LAB_1C13b
        JMP   LAB_1B1D          ; execute function then continue evaluation
