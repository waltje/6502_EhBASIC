From 466e801f87b618cf39d7753f8e42e0d148fa63c2 Mon Sep 17 00:00:00 2001
From: Klapautsiy <34581168+Klapautsiy@users.noreply.github.com>
Date: Sun, 2 Jun 2019 19:49:24 +0300
Subject: [PATCH 1/5] shift to free up RAM IO_AREA, Ram_top

IO_AREA = $F000 -> $FF00 ; set I/O area for this monitor

Ram_top = $C000 -> $D600 ; end of user RAM+1 (set as needed, should be page aligned)
*= $C000 -> $D600 ; This start can be changed to suit your system

user RAM: $0300 - $D600 - 1 = 54015 bytes
---
 patched/basic.asm   | 53 +++++++++++++++++++++++----------------------
 patched/min_mon.asm |  7 ++++--
 2 files changed, 32 insertions(+), 28 deletions(-)

diff --git a/patched/basic.asm b/patched/basic.asm
index d925e5e..5c4733d 100644
--- a/patched/basic.asm
+++ b/patched/basic.asm
@@ -25,7 +25,7 @@
 ; 2.22p3    fixed RAM above code / Ibuff above EhBASIC patch breaks STR$()
 ;              fix provided by github user mgcaret
 ; 2.22p4    fixed string compare of equal strings in direct mode returns FALSE
-;              fixed FALSE stored to a variable after a string compare 
+;              fixed FALSE stored to a variable after a string compare
 ;                 is > 0 and < 1E-16
 ;              added additional stack floor protection for background interrupts
 ;              fixed conditional LOOP & NEXT cannot find their data strucure on stack
@@ -91,7 +91,7 @@ ut1_ph            = ut1_pl+1  ; utility pointer 1 high byte
 ut2_pl            = $73       ; utility pointer 2 low byte
 ut2_ph            = ut2_pl+1  ; utility pointer 2 high byte
 
-Temp_2            = ut1_pl    ; temp byte for block move    
+Temp_2            = ut1_pl    ; temp byte for block move
 
 FACt_1            = $75       ; FAC temp mantissa1
 FACt_2            = FACt_1+1  ; FAC temp mantissa2
@@ -458,13 +458,13 @@ Ibuffs            = VEC_SV+$16
 Ibuffe            = Ibuffs+$47; end of input buffer
 
 Ram_base          = $0300     ; start of user RAM (set as needed, should be page aligned)
-Ram_top           = $C000     ; end of user RAM+1 (set as needed, should be page aligned)
+Ram_top           = $D600     ; end of user RAM+1 (set as needed, should be page aligned)
 
 Stack_floor       = 16        ; bytes left free on stack for background interrupts
 
 ; This start can be changed to suit your system
 
-      *=    $C000
+      *=    $D600
 
 ; BASIC cold start entry point
 
@@ -3313,7 +3313,7 @@ LAB_1C25
 ; *** begin patch  string pointer high byte trashed when moved to stack
 ; *** add
       LSR   FAC1_r            ; clear bit 7 (<$80) = do not round up
-; *** end patch 
+; *** end patch
       RTS
 
 ; get value from line .. continued
@@ -4477,7 +4477,7 @@ LAB_20DC
       BEQ   LAB_MVST          ; fix STR$() using page zero via LAB_296E
       CMP   #>Ibuffs          ; compare with location of input buffer page
       BNE   LAB_RTST          ; branch if not in utility area
-LAB_MVST      
+LAB_MVST
 ; *** end   RAM above code / Ibuff above EhBASIC patch V2 ***
 
                               ; string in utility area, move to string memory
@@ -6370,7 +6370,7 @@ LAB_28C9
       BIT   expneg            ; test exponent -ve flag
       BPL   LAB_28DB          ; if +ve go evaluate exponent
 
-                              ; else do exponent = -exponent 
+                              ; else do exponent = -exponent
       LDA   #$00              ; clear result
       SEC                     ; set carry for subtract
       SBC   expcnt            ; subtract exponent byte
@@ -6603,7 +6603,7 @@ LAB_29F5
       STY   Sendl             ; save output string index
 LAB_29F7
       LDY   #$00              ; clear index (point to 100,000)
-      LDX   #$80              ; 
+      LDX   #$80              ;
 LAB_29FB
       LDA   FAC1_3            ; get FAC1 mantissa3
       CLC                     ; clear carry for add
@@ -6615,22 +6615,22 @@ LAB_29FB
       LDA   FAC1_1            ; get FAC1 mantissa1
       ADC   LAB_2A9A,Y        ; add -ve MSB
       STA   FAC1_1            ; save FAC1 mantissa1
-      INX                     ; 
-      BCS   LAB_2A18          ; 
+      INX                     ;
+      BCS   LAB_2A18          ;
 
       BPL   LAB_29FB          ; not -ve so try again
 
-      BMI   LAB_2A1A          ; 
+      BMI   LAB_2A1A          ;
 
 LAB_2A18
-      BMI   LAB_29FB          ; 
+      BMI   LAB_29FB          ;
 
 LAB_2A1A
-      TXA                     ; 
-      BCC   LAB_2A21          ; 
+      TXA                     ;
+      BCC   LAB_2A21          ;
 
-      EOR   #$FF              ; 
-      ADC   #$0A              ; 
+      EOR   #$FF              ;
+      ADC   #$0A              ;
 LAB_2A21
       ADC   #'0'-1            ; add "0"-1 to result
       INY                     ; increment index ..
@@ -6653,9 +6653,9 @@ LAB_2A3B
       STY   Sendl             ; save output string index
       LDY   Cvaral            ; get current var address low byte
       TXA                     ; get character back
-      EOR   #$FF              ; 
-      AND   #$80              ; 
-      TAX                     ; 
+      EOR   #$FF              ;
+      AND   #$80              ;
+      TAX                     ;
       CPY   #$12              ; compare index with max
       BNE   LAB_29FB          ; loop if not max
 
@@ -7155,7 +7155,7 @@ NextB1
       BEQ   GoPr2             ; if zero print whole string
 
       BNE   GoPr1             ; else go make output string
-      
+
 ; this is the exit code and is also used by HEX$()
 ; truncate string to remove leading "0"s
 
@@ -7879,9 +7879,9 @@ StrTab
       .word LAB_COLD          ; initial warm start vector (cold start)
 
       .byte $00               ; these bytes are not used by BASIC
-      .word $0000             ; 
-      .word $0000             ; 
-      .word $0000             ; 
+      .word $0000             ;
+      .word $0000             ;
+      .word $0000             ;
 
       .byte $4C               ; JMP opcode
       .word LAB_FCER          ; initial user function vector ("Function call" error)
@@ -7896,8 +7896,8 @@ LAB_MSZM
       .byte $0D,$0A,"Memory size ",$00
 
 LAB_SMSG
-      .byte " Bytes free",$0D,$0A,$0A
-      .byte "Enhanced BASIC 2.22p4",$0A,$00
+      .byte " Bytes free",$0D,$0A,$00
+;      .byte "Enhanced BASIC 2.22p4",$0A,$00
 
 ; numeric constants and series
 
@@ -8781,7 +8781,8 @@ ERR_LD      .byte "LOOP without DO",$00
 LAB_BMSG    .byte $0D,$0A,"Break",$00
 LAB_EMSG    .byte " Error",$00
 LAB_LMSG    .byte " in line ",$00
-LAB_RMSG    .byte $0D,$0A,"Ready",$0D,$0A,$00
+;LAB_RMSG    .byte $0D,$0A,"Ready",$0D,$0A,$00
+LAB_RMSG    .byte $0D,$0A,$00
 
 LAB_IMSG    .byte " Extra ignored",$0D,$0A,$00
 LAB_REDO    .byte " Redo from start",$0D,$0A,$00
diff --git a/patched/min_mon.asm b/patched/min_mon.asm
index 0ae05f7..a8718fa 100644
--- a/patched/min_mon.asm
+++ b/patched/min_mon.asm
@@ -14,7 +14,7 @@ NMI_vec     = IRQ_vec+$0A     ; NMI code vector
 
 ; setup for the 6502 simulator environment
 
-IO_AREA     = $F000           ; set I/O area for this monitor
+IO_AREA     = $FF00           ; set I/O area for this monitor
 
 ACIAsimwr   = IO_AREA+$01     ; simulated ACIA write port
 ACIAsimrd   = IO_AREA+$04     ; simulated ACIA read port
@@ -121,7 +121,10 @@ NMI_CODE
 END_CODE
 
 LAB_mess
-      .byte $0D,$0A,"6502 EhBASIC [C]old/[W]arm ?",$00
+;      .byte $0D,$0A,"6502 EhBASIC [C]old/[W]arm ?",$00
+      .byte $0D,$0A,"EhBASIC 2.22"
+      .byte $0D,$0A,"[C]old/[W]arm",$00
+
                               ; sign on string
 
 ; system vectors

From cb2d927005d85273d534a50958ff37450f9ddbd1 Mon Sep 17 00:00:00 2001
From: Klapautsiy <34581168+Klapautsiy@users.noreply.github.com>
Date: Sun, 2 Jun 2019 19:49:59 +0300
Subject: [PATCH 2/5] Add files via upload

---
 patched/6502_EhBASIC_V2.22 free RAM.png | Bin 0 -> 5239 bytes
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 patched/6502_EhBASIC_V2.22 free RAM.png

diff --git a/patched/6502_EhBASIC_V2.22 free RAM.png b/patched/6502_EhBASIC_V2.22 free RAM.png
new file mode 100644
index 0000000000000000000000000000000000000000..f90b73d15a86e60a53486cecc84ed1ea90bd1be9
GIT binary patch
literal 5239
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

literal 0
HcmV?d00001


From 5f7e00c50f21a627d7ffacee6b49e3565ff1a8ec Mon Sep 17 00:00:00 2001
From: Klapautsiy <34581168+Klapautsiy@users.noreply.github.com>
Date: Sun, 2 Jun 2019 20:01:21 +0300
Subject: [PATCH 3/5] Create README.md

---
 patched/README.md | 10 ++++++++++
 1 file changed, 10 insertions(+)
 create mode 100644 patched/README.md

diff --git a/patched/README.md b/patched/README.md
new file mode 100644
index 0000000..ad8634d
--- /dev/null
+++ b/patched/README.md
@@ -0,0 +1,10 @@
+shift to free up RAM
+
+IO_AREA = $F000 -> $FF00 ; set I/O area for this monitor
+
+Ram_top = $C000 -> $D600 ; end of user RAM+1 (set as needed, should be page aligned)
+*= $C000 -> $D600 ; This start can be changed to suit your system
+
+user RAM: $0300 - $D600 - 1 = 54015 bytes
+
+![](https://raw.githubusercontent.com/Klapautsiy/6502_EhBASIC_V2.22/master/patched/6502_EhBASIC_V2.22%20free%20RAM.png)

From 19351989a4bcd94811fc756344115004d117518c Mon Sep 17 00:00:00 2001
From: Klapautsiy <34581168+Klapautsiy@users.noreply.github.com>
Date: Sun, 2 Jun 2019 20:02:22 +0300
Subject: [PATCH 4/5] Update README.md

---
 patched/README.md | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/patched/README.md b/patched/README.md
index ad8634d..18c36c8 100644
--- a/patched/README.md
+++ b/patched/README.md
@@ -1,10 +1,10 @@
-shift to free up RAM
-
-IO_AREA = $F000 -> $FF00 ; set I/O area for this monitor
-
-Ram_top = $C000 -> $D600 ; end of user RAM+1 (set as needed, should be page aligned)
-*= $C000 -> $D600 ; This start can be changed to suit your system
-
-user RAM: $0300 - $D600 - 1 = 54015 bytes
-
+shift to free up RAM  
+  
+IO_AREA = $F000 -> $FF00 ; set I/O area for this monitor  
+  
+Ram_top = $C000 -> $D600 ; end of user RAM+1 (set as needed, should be page aligned)  
+*= $C000 -> $D600 ; This start can be changed to suit your system  
+  
+user RAM: $0300 - $D600 - 1 = 54015 bytes  
+  
 ![](https://raw.githubusercontent.com/Klapautsiy/6502_EhBASIC_V2.22/master/patched/6502_EhBASIC_V2.22%20free%20RAM.png)

From 7e9516cbe08ead59f854b0cc11f633e652233e11 Mon Sep 17 00:00:00 2001
From: Klapautsiy <34581168+Klapautsiy@users.noreply.github.com>
Date: Sun, 2 Jun 2019 20:49:15 +0300
Subject: [PATCH 5/5] Update README.md

---
 patched/README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/patched/README.md b/patched/README.md
index 18c36c8..5e3ae99 100644
--- a/patched/README.md
+++ b/patched/README.md
@@ -5,6 +5,6 @@ IO_AREA = $F000 -> $FF00 ; set I/O area for this monitor
 Ram_top = $C000 -> $D600 ; end of user RAM+1 (set as needed, should be page aligned)  
 *= $C000 -> $D600 ; This start can be changed to suit your system  
   
-user RAM: $0300 - $D600 - 1 = 54015 bytes  
+user RAM: ($D600 - 1) - $0300 = 54015 bytes  
   
 ![](https://raw.githubusercontent.com/Klapautsiy/6502_EhBASIC_V2.22/master/patched/6502_EhBASIC_V2.22%20free%20RAM.png)


